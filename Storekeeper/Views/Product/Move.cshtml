@model Storekeeper.ViewModels.Products.MoveViewModel

@{
    ViewData["Title"] = "Списание";
}

<h1>Списание</h1>

<h4>Product</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Move">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="ParentProductId" />
            <input type="hidden" asp-for="Balance" />
            <div class="form-group">
                <label asp-for="ProductName" class="control-label">@Model.ProductName  | </label>
                <label asp-for="Balance" class="control-label"> Остаток - @Model.Balance</label>
            </div>
            <div class="form-group">
                <label asp-for="Quantity" class="control-label"></label>
                <input asp-for="Quantity" class="form-control" />
                <span asp-validation-for="Quantity" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="StorehouseId" class="control-label"></label>
                <select asp-for="StorehouseId" class="form-control" asp-items="@(new SelectList(Model.StorehousesList, "Id", "Name"))">
                    <option value="">Выберите</option>
                </select>
                <span asp-validation-for="StorehouseId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
